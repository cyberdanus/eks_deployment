name: Deploy Terraform
on:
  workflow_dispatch:
    inputs:
      needdeploy:
        description: 'Please choice action!'
        required: true
        default: 'Install'
        type: choice
        options:
        - Install
        - Destroy
  pull_request:
    branches: [master]
    types: [opened, reopened]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - uses: azure/setup-kubectl@v3
        with:
          version: '1.26.1'
        id: install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Terraform fmt
        working-directory: ./eks_dep
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        working-directory: ./eks_dep
        id: init
        run: terraform init

      - name: Terraform Validate
        working-directory: ./eks_dep
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        working-directory: ./eks_dep
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform apply force
        if: github.event.inputs.needdeploy == 'Install'
        working-directory: ./eks_dep
        id: apply
        run: terraform apply -auto-approve -no-color
        continue-on-error: true

      - name: Terraform destroy force
        if: github.event.inputs.needdeploy == 'Destroy'
        working-directory: ./eks_dep
        id: destroy
        run: terraform destroy -auto-approve -no-color
        continue-on-error: true

      - name: Deploy to Terraform 
        if: github.event.inputs.needdeploy == 'Install'
        run: |
          kubectl create namespace argocd
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/master/manifests/install.yaml
        continue-on-error: true
        
      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit and start building artifact:
            
            Repository: ${{ github.repository }}
            Job status: ${{ job.status }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}